@implements ISwitch

@{
    var dropdownComponent = ComponentResolver.ResolveComponent<ISwitch>();
    if (dropdownComponent != default)
    {
        <DynamicComponent Type="@dropdownComponent.GetType()" Parameters="@GetParameters()" />
    }
    else
    {

    }
}

@code{
    [Parameter] public bool Value { get; set; }
    [Parameter] public bool Disabled { get; set; }
    [Parameter] public string Name { get; set; }
    [Parameter] public EventCallback<bool> Change { get; set; }
    [Parameter(CaptureUnmatchedValues = true)] public Dictionary<string, object> AdditionalAttributes { get; set; }

    private Dictionary<string, object> GetParameters()
    {
        var parameters = new Dictionary<string, object>
        {
            { "Value", Value },
            { "Disabled", Disabled },
            { "Name", Name },
            { "Change", Change },
            { "AdditionalAttributes", AdditionalAttributes }
        };
        return parameters;
    }
}