@using Dtwo.API.View.Components.Forms

@typeparam TValue
@implements IDropDown<TValue>

@{
    var dropdownComponent = ComponentResolver.ResolveComponent<IDropDown<TValue>>();
    if (dropdownComponent != default)
    {
        <DynamicComponent Type="@dropdownComponent.GetType()" Parameters="@GetParameters()" />
    }
    else
    {

    }
}

@code {
    [Parameter] public TValue Value { get; set; }
    [Parameter] public IEnumerable<object> Data { get; set; }
    [Parameter] public string Name { get; set; }
    [Parameter] public EventCallback<TValue> ValueChanged { get; set; }
    [Parameter] public EventCallback<object> Change { get; set; }
    [Parameter(CaptureUnmatchedValues = true)] public Dictionary<string, object> AdditionalAttributes { get; set; }

    private Dictionary<string, object> GetParameters()
    {
        return new Dictionary<string, object>
        {
            ["Data"] = Data,
            ["Value"] = Value,
            ["Name"] = Name,
            ["Change"] = Change,
            ["ValueChanged"] = ValueChanged,
            ["AdditionalAttributes"] = AdditionalAttributes,

            // Add other necessary parameters here if any
        };
    }
}
